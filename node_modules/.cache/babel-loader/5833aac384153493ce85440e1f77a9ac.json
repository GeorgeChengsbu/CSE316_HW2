{"ast":null,"code":"var _jsxFileName = \"/Users/george/Downloads/top5-lister-hw2/src/components/ItemCard.js\";\nimport React from 'react';\nimport MoveItem_Transaction from './jsTPS/MoveItem_Transaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ItemCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleItemClick = id => {\n      this.setState({\n        editActive: !this.state.editActive,\n        item: id,\n        text: this.props.currentList.items[this.props.i]\n      });\n    };\n\n    this.handleItemKeyPress = event => {\n      if (event.code === \"Enter\") {\n        this.handleBlur();\n      }\n    };\n\n    this.handleUpdate = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.handleDragStart = event => {\n      event.dataTransfer.setData(\"text\", this.props.i);\n    };\n\n    this.handleDrop = event => {\n      event.preventDefault();\n      var data = event.dataTransfer.getData(\"text\");\n      let oldId = parseInt(data.substring(5));\n      let newId = parseInt(this.props.i);\n      oldId--;\n      newId--;\n      this.props.moveItemCallback(oldId, newId);\n    };\n\n    this.handleDragover = event => {\n      event.preventDefault();\n    };\n\n    this.handleDragEnter = event => {\n      event.currentTarget.style.background = \"#669966\";\n    };\n\n    this.handleDragLeave = event => {\n      event.currentTarget.style.background = \"#e1e4cb\";\n    };\n\n    this.state = {\n      item: null,\n      text: null,\n      editActive: false\n    };\n  }\n\n  toggleState() {\n    this.setState(prevState => ({\n      editActive: !this.state.editActive\n    }), () => {\n      console.log(this.state.editActive);\n    });\n  }\n\n  handleBlur() {\n    let textValue = this.state.text;\n    this.props.renameItemCallback(this.props.i, textValue);\n    this.toggleState();\n    console.log(this.state.editActive);\n  }\n\n  render() {\n    const {\n      currentList,\n      i,\n      renameItemCallback\n    } = this.props;\n\n    if (this.state.editActive) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        id: i,\n        className: \"list-\",\n        type: \"text\",\n        onKeyPress: this.handleItemKeyPress,\n        onBlur: this.handleBlur.bind(this),\n        onChange: this.handleUpdate,\n        defaultValue: currentList.items[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onDoubleClick: this.handleItemClick,\n        draggable: true,\n        onDragOver: this.handleDragover,\n        onDragStart: this.handleDragStart,\n        onDragEnter: this.handleDragEnter,\n        onDragLeave: this.handleDragLeave,\n        onDragEnd: this.handleDragLeave,\n        onDrop: this.handleDrop,\n        children: currentList.items[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/george/Downloads/top5-lister-hw2/src/components/ItemCard.js"],"names":["React","MoveItem_Transaction","ItemCard","Component","constructor","props","handleItemClick","id","setState","editActive","state","item","text","currentList","items","i","handleItemKeyPress","event","code","handleBlur","handleUpdate","target","value","handleDragStart","dataTransfer","setData","handleDrop","preventDefault","data","getData","oldId","parseInt","substring","newId","moveItemCallback","handleDragover","handleDragEnter","currentTarget","style","background","handleDragLeave","toggleState","prevState","console","log","textValue","renameItemCallback","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MoveItem_Transaction from './jsTPS/MoveItem_Transaction';\n\nexport default class ItemCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            item: null,\n            text: null,\n            editActive: false\n        }\n    }\n    toggleState() {\n            this.setState(prevState => ({\n                editActive: !this.state.editActive\n            }), () => {\n                console.log(this.state.editActive);\n            });\n    }\n    handleItemClick = (id) => {\n        this.setState({\n            editActive: !this.state.editActive,\n            item:id,\n            text: this.props.currentList.items[this.props.i]\n        });\n    }\n    handleItemKeyPress = (event) => {\n        if (event.code === \"Enter\") {\n            this.handleBlur();\n        }\n    }\n    handleUpdate = (event) => {\n        this.setState(\n            { text: event.target.value });\n    }\n    handleBlur() {\n        let textValue = this.state.text;\n        this.props.renameItemCallback(this.props.i, textValue);\n        this.toggleState();\n        console.log(this.state.editActive);\n    }\n    handleDragStart = (event) => {\n        event.dataTransfer.setData(\"text\", this.props.i);\n    }\n    handleDrop = (event) => {\n        event.preventDefault();\n        var data = event.dataTransfer.getData(\"text\");\n        let oldId = parseInt(data.substring(5));\n        let newId = parseInt(this.props.i);\n        oldId--;\n        newId--;\n        this.props.moveItemCallback(oldId, newId);\n    }\n    handleDragover = (event) => {\n        event.preventDefault();\n    }\n    handleDragEnter = (event) => {\n        event.currentTarget.style.background = \"#669966\";\n    }\n    handleDragLeave = (event) => {\n        event.currentTarget.style.background = \"#e1e4cb\";\n    }\n    render() {\n        const {currentList, i, renameItemCallback} = this.props;\n        if (this.state.editActive) {\n            return (\n                <input\n                    id={i}\n                    className='list-'\n                    type='text'\n                    onKeyPress={this.handleItemKeyPress}\n                    onBlur={this.handleBlur.bind(this)}\n                    onChange={this.handleUpdate}\n                    defaultValue={currentList.items[i]}\n                />)\n        }\n        else {\n            return (\n                <div\n                    onDoubleClick={this.handleItemClick}\n                    draggable = {true}\n                    onDragOver = {this.handleDragover}\n                    onDragStart = {this.handleDragStart}\n                    onDragEnter = {this.handleDragEnter}\n                    onDragLeave = {this.handleDragLeave}\n                    onDragEnd = {this.handleDragLeave}\n                    onDrop = {this.handleDrop}\n                    >\n                    {currentList.items[i]}\n                </div>\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}