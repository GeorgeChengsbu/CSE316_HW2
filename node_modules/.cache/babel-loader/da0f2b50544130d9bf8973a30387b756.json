{"ast":null,"code":"var _jsxFileName = \"/Users/george/Downloads/top5-lister-hw2/src/components/ItemCard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ItemCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleItemClick = id => {\n      console.log(this.props.currentList);\n      this.setState({\n        editActive: !this.state.editActive,\n        item: id,\n        text: this.props.currentList.items[this.props.i]\n      });\n    };\n\n    this.handleItemKeyPress = event => {\n      if (event.code === \"Enter\") {\n        this.handleBlur();\n      }\n    };\n\n    this.handleUpdate = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.state = {\n      item: null,\n      text: null,\n      editActive: false\n    };\n  }\n\n  toggleState() {\n    this.setState(prevState => ({\n      editActive: !this.state.editActive\n    }), () => {\n      console.log(this.state.editActive);\n    });\n  }\n\n  handleBlur() {\n    console.log(this.state.text);\n    let textValue = this.state.text;\n    this.props.renameItemCallback(this.props.i, textValue);\n    this.toggleState();\n  }\n\n  render() {\n    const {\n      currentList,\n      i,\n      handleDragEnterCallback,\n      handleDragLeaveCallback,\n      handleDragStartCallback,\n      handleDragoverCallback,\n      handleDropCallback\n    } = this.props;\n\n    if (this.state.editActive) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        id: i,\n        className: \"list-\",\n        type: \"text\",\n        onKeyPress: this.handleItemKeyPress,\n        onBlur: this.handleBlur.bind(this),\n        onChange: this.handleUpdate,\n        defaultValue: currentList.items[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDoubleClick: this.handleItemClick,\n        onDragOver: handleDragoverCallback,\n        onDragStart: handleDragStartCallback,\n        onDrop: handleDropCallback,\n        onDragEnter: handleDragEnterCallback,\n        onDragLeave: handleDragLeaveCallback,\n        children: currentList.items[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/george/Downloads/top5-lister-hw2/src/components/ItemCard.js"],"names":["React","ItemCard","Component","constructor","props","handleItemClick","id","console","log","currentList","setState","editActive","state","item","text","items","i","handleItemKeyPress","event","code","handleBlur","handleUpdate","target","value","toggleState","prevState","textValue","renameItemCallback","render","handleDragEnterCallback","handleDragLeaveCallback","handleDragStartCallback","handleDragoverCallback","handleDropCallback","bind"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default class ItemCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            item: null,\n            text: null,\n            editActive: false\n        }\n    }\n    toggleState() {\n            this.setState(prevState => ({\n                editActive: !this.state.editActive\n            }), () => {\n                console.log(this.state.editActive);\n            });\n    }\n    handleItemClick = (id) => {\n        console.log(this.props.currentList);\n        this.setState({\n            editActive: !this.state.editActive,\n            item:id,\n            text: this.props.currentList.items[this.props.i]\n        });\n    }\n    handleItemKeyPress = (event) => {\n        if (event.code === \"Enter\") {\n            this.handleBlur();\n        }\n    }\n    handleUpdate = (event) => {\n        this.setState(\n            { text: event.target.value });\n    }\n    handleBlur() {\n        console.log(this.state.text);\n        let textValue = this.state.text;\n        this.props.renameItemCallback(this.props.i, textValue);\n        this.toggleState();\n    }\n    render() {\n        const {currentList, i, handleDragEnterCallback, handleDragLeaveCallback, handleDragStartCallback, handleDragoverCallback, handleDropCallback} = this.props;\n        if (this.state.editActive) {\n            return (\n                <input\n                    id={i}\n                    className='list-'\n                    type='text'\n                    onKeyPress={this.handleItemKeyPress}\n                    onBlur={this.handleBlur.bind(this)}\n                    onChange={this.handleUpdate}\n                    defaultValue={currentList.items[i]}\n                />)\n        }\n        else {\n            return (\n                <div\n                    draggable = {true}\n                    onDoubleClick={this.handleItemClick}\n                    onDragOver={handleDragoverCallback}\n                    onDragStart={handleDragStartCallback}\n                    onDrop={handleDropCallback}\n                    onDragEnter={handleDragEnterCallback}\n                    onDragLeave={handleDragLeaveCallback}\n                >\n                    {currentList.items[i]}\n                </div>\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}